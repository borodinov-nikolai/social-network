// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int           @id @default(autoincrement())
  login            String
  email            String        @unique
  password         String
  role             Role          @default(user)
  avatar           String?
  refreshToken     RefreshToken?
  posts            Post[]
  contacts         Contact[]     @relation("UserContacts")
  contacted        Contact[]     @relation("UserContacted")
  sentMessages     Message[]     @relation("SentMessages")
  receivedMessages Message[]     @relation("ReceivedMessages")
}

enum Role {
  user
  admin
}

model RefreshToken {
  token  String
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
}

model Contact {
  id        Int  @id @default(autoincrement())
  userId    Int
  contactId Int
  user      User @relation("UserContacts", fields: [userId], references: [id])
  contact   User @relation("UserContacted", fields: [contactId], references: [id])

  @@unique([userId, contactId])
}

model Message {
  id         Int      @id @default(autoincrement())
  read       Boolean  @default(false)
  content    String
  timestamp  DateTime @default(now())
  senderId   Int
  receiverId Int
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
}

model Post {
  id     Int      @id @default(autoincrement())
  title  String
  image  String
  text   String
  date   DateTime
  user   User     @relation(fields: [userId], references: [id])
  userId Int
}
